<html lang="en">
<style>
    .chat-content {
        height: 450px;
        overflow-y: scroll;
        padding: 10px;
    }
    .chat-content li {
        margin-top: 10px;
        list-style: none;
    }
    .text-small {
        font-size: 12px;
        color: gray;
        margin-bottom: 0;
    }
    .chat-box {
        background: #eee;
        padding: 5px;
        border-radius: 5px;
        float: left;
    }
    .mine {
        float: right;
    } 
</style>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <%- include( './component/header.ejs' ) %>
    <div class="container p-4 detail">
        <div class="row">
          <div class="col-3">
            <button type="button" class="btn btn-info mb-1" data-bs-toggle="modal" data-bs-target="#exampleModal">채팅 초대</button>
            <ul class="list-group chat-list">
              <% if( chatRooms.length > 0 ) { %>
                <% chatRooms.forEach( room => { %>
                  <li class="list-group-item" onclick="showChatDiv( '<%= room._id %>' )">
                    <h6><%= room.chatRoomSubject %></h6>
                    <h6 class="text-small"><%= room.chatRoomDesc %></h6>
                    <input type="hidden" id="chatRoomId" value="<%= room._id %>"/>
                  </li>
                <% } ) %>
              <% } else { %>
                <li class="list-group-item">
                  <h6>현재 참여중인 채팅이 없습니다.</h6>
                </li>
              <% } %>
             </ul>
           </div>
      
           <div class="col-9 p-0" id="chatDiv" style="display: none;">
             <div class="chat-room">
                <ul class="list-group chat-content">

                </ul>
              <div class="input-group">
                <input class="form-control" id="chat-input">
                <button class="btn btn-secondary" id="send" onclick="sendMessage( $( '#chat-input' ).val(), `<%= user.username %>` )">전송</button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h1 class="modal-title fs-5" id="exampleModalLabel">초대 대상</h1>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <% allMembers.forEach( member => { %>
                <div style="display: flex;">
                  <input class="form-check-input" type="checkbox" value="<%= member.username %>"/>&nbsp;&nbsp;<h6><%= member.username %></h6>
                </div>
              <% } ) %>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
              <button type="button" class="btn btn-primary" id="inviteBtn" onclick="inviteChat()">초대</button>
            </div>
          </div>
        </div>
      </div>
</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.5.3/socket.io.js"></script>
<script>
  let chatRoomID = undefined;
  const inviteChat = () => {
    const inviteTarget = [ ...$( ".form-check-input" ) ].map( ele => {
      if( ele.checked ) {
        return ele.value;
      }
    } ).filter( ele => ele !== undefined );

    if( inviteTarget.length < 1 ) {
      alert( "초대할 회원을 선택해주세요." );
      return;
    }

    $.ajax(
      {
        method : "post",
        url    : "/post/chatRoom",
        data   : {
          chatRequester   : "<%= user.username %>",
          chatResponser   : inviteTarget,
          chatCreateDate  : new Date(),
          chatRoomSubject : `${ inviteTarget.toString() }`,
          chatRoomDesc    : "채팅방입니다."
        },
        success: ( res ) => {
          if( res === "existChatRoom" ) {
            alert( "이미 만들어진 채팅방입니다." );
          } else {
            location.reload();
          }
        },
        fail: () => {
          alert( "서버에 문제가 생겼습니다.\n잠시 후 다시 시도해주세요." );
        }
      }
    )
  }

  const socket = io();
  const showChatDiv = ( chatId ) => {
    chatRoomID = chatId;
    $( "#chatDiv" ).attr( "style", "display: ;" );
    const parentEle = $( ".chat-content" );
    _removeChildren( parentEle );
    $.ajax(
      {
        method : "post",
        url    : "/post/getChatMsg",
        data   : {
          chatRoomId : chatId.toString()
        },
        success : ( res ) => {
          const chatMsgs = JSON.parse( res );
          chatMsgs.forEach( msg => {
            if( "<%= user.username %>" === msg.chatRequester ) {
              parentEle.append( `<li><span class="chat-box mine">${ msg.chatMessage }</span></li>` );
            } else {
              parentEle.append( `<li><span class="chat-box">${ msg.chatMessage }</span></li>` );
            }
          } );
        },
        fail : ( err ) => {
          alert(err);
        }
      }
    )
  }

  const _removeChildren = ( ele ) => {
    while( ele[0].hasChildNodes() ) {
      ele[0].removeChild( ele[0].firstChild );
    }
  }

  const sendMessage = ( msg, sender ) => {
    const msgInfo = {
      chatRoomId    : chatRoomID,
      chatRequester : sender,
      chatMessage   : msg,
      sendDate      : new Date()
    }
    socket.emit( "msg", msgInfo );
    $( "#chat-input" ).val( "" );
  }

socket.on( "broadcast", ( data ) => {
  const parentEle = $( ".chat-content" );
  if( data.chatRequester == "<%= user.username %>" ) {
    parentEle.append( `<li><span class="chat-box mine">${ data.chatMessage }</span></li>` );
  } else {
    parentEle.append( `<li><span class="chat-box">${ data.chatMessage }</span></li>` );
  }
} );
</script>
</html>